{
  "name": "uxbiblio-figma-plugin",
  "version": "0.1.0",
  "private": true,
  "description": "UXBiblio Figma plugin MVP scaffolding.",
  "scripts": {
    "predev": "npm run kill:server",
    "dev": "vite",
    "build": "npm run build:ui && npm run build:main && npm run compatibility-check && node scripts/export-ui-bundle.mjs",
    "build:main": "node scripts/build-main.mjs",
    "build:ui": "vite build",
    "preview": "vite preview",
    "dev:server": "node server/index.mjs",
    "compatibility-check": "node scripts/check-figma-compat.cjs",
    "lint": "eslint \"src/**/*.{ts,tsx}\" \"ui/src/**/*.{ts,tsx}\"",
    "lint:fix": "npm run lint -- --fix",
    "format": "prettier --check .",
    "format:fix": "prettier --write .",
    "format:changed": "node -e \"const {execSync}=require('child_process');const cp=(c)=>{try{return execSync(c,{stdio:['ignore','pipe','ignore']}).toString().trim();}catch(e){return ''}};const diff=cp('git diff --name-only --diff-filter=ACMRTUXB');if(!diff){console.log('No changed files');process.exit(0);}const files=diff.split('\\n').filter(f=>/\\.(ts|tsx|js|jsx|json|css|scss|md)$/.test(f));if(files.length){execSync('npx prettier --write '+files.map(f=>`\\\"${f}\\\"`).join(' '),{stdio:'inherit'})}else{console.log('No matching files');}\"",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:integration": "vitest run tests/integration/characterization",
    "test:clones:console": "bash scripts/test-clones-console.sh",
    "check:clones": "bash scripts/check-clones.sh",
    "test:ci": "ts-node-esm scripts/run-test-ci.ts && npm run test:clones:console && npm run check:clones",
    "typecheck": "tsc --noEmit",
    "check": "npm run lint && npm run typecheck && npm run test",
    "clean": "rm -rf dist",
    "validate": "npm run lint && npm run typecheck && npm run test",
    "check:watch": "tsc --noEmit --watch",
    "lint:staged": "lint-staged",
    "security:audit": "npm audit --audit-level=high",
    "deps:outdated": "npm outdated || true",
    "clean:all": "rm -rf dist dist.* build .turbo .cache coverage",
    "e2e": "echo \"No e2e tests configured\" && exit 0",
    "scripts": "node -e \"const p=require('./package.json');const s=p.scripts||{};Object.keys(s).sort().forEach(k=>console.log('- '+k+': '+s[k]));\"",
    "test:coverage": "vitest run --coverage",
    "kill:server": "bash -lc 'ROOT=\"$PWD\"; PORTS=\"${PORT:-} ${BACKEND_PORT:-} ${FRONTEND_PORT:-} 3000 5173 53173 8989 9991 9777\"; for p in $PORTS; do if [ -n \"$p\" ]; then for pid in $(lsof -tiTCP:$p -sTCP:LISTEN 2>/dev/null); do kill -9 $pid 2>/dev/null || true; done; fi; done; pkill -f \"$ROOT\" 2>/dev/null || true'",
    "server": "npm run kill:server && npm run dev:server",
    "size": "node -e \"const fs=require('fs');const path=require('path');let d=process.cwd();let f=null;while(true){const p=path.join(d,'tools','loc-top20.js');if(fs.existsSync(p)){f=p;break;}const up=path.dirname(d);if(up===d)break;d=up;}if(!f){console.error('tools/loc-top20.js not found');process.exit(1);}require(f);\""
  },
  "dependencies": {
    "lucide-react": "^0.429.0",
    "posthog-js": "^1.275.3",
    "react": "^18.3.1",
    "react-dom": "^18.3.1"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@eslint/js": "^9.37.0",
    "@figma/plugin-typings": "^1.67.0",
    "@testing-library/jest-dom": "^6.5.0",
    "@testing-library/react": "^16.0.0",
    "@types/react": "^18.3.5",
    "@types/react-dom": "^18.3.2",
    "@typescript-eslint/eslint-plugin": "^8.46.0",
    "@typescript-eslint/parser": "^8.46.0",
    "@vitejs/plugin-react": "^4.3.1",
    "dotenv": "^16.4.5",
    "esbuild": "^0.21.5",
    "eslint": "^9.37.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^6.1.1",
    "globals": "^14.0.0",
    "jscpd": "^3.5.10",
    "jsdom": "^27.0.0",
    "lint-staged": "^15.2.2",
    "prettier": "^3.6.2",
    "ts-node": "^10.9.2",
    "typescript": "^5.4.5",
    "typescript-eslint": "^8.46.0",
    "vite": "^5.3.4",
    "vitest": "^3.2.4"
  }
}
